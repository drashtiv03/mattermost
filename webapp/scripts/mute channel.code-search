# Query: CategoryTypes
# Including: ./webapp
# Excluding: ./webapp/dist,./webapp/channels/dist,.*test.*
# ContextLines: 1

73 results - 14 files

webapp/channels/src/actions/views/channel_sidebar.ts:
   5  import {General} from 'mattermost-redux/constants';
   6: import {CategoryTypes} from 'mattermost-redux/constants/channel_categories';
   7  import {getCategory, makeGetChannelIdsForCategory} from 'mattermost-redux/selectors/entities/channel_categories';

  81                  const isDMGM = selectedChannel?.type === General.DM_CHANNEL || selectedChannel?.type === General.GM_CHANNEL;
  82:                 return targetCategory?.type === CategoryTypes.CUSTOM || targetCategory?.type === CategoryTypes.FAVORITES || (isDMGM && targetCategory?.type === CategoryTypes.DIRECT_MESSAGES) || (!isDMGM && targetCategory?.type !== CategoryTypes.DIRECT_MESSAGES);
  83              });

webapp/channels/src/components/channel_move_to_sub_menu/index.tsx:
   18  
   19: import {CategoryTypes} from 'mattermost-redux/constants/channel_categories';
   20  import {getCategoryInTeamWithChannel} from 'mattermost-redux/selectors/entities/channel_categories';

   79  
   80:             if (category.type === CategoryTypes.FAVORITES) {
   81                  text = (

   87              }
   88:             if (category.type === CategoryTypes.CHANNELS) {
   89                  text = (

  110                      key={`moveToCategory-${props.channel.id}-${category.id}`}
  111:                     leadingElement={category.type === CategoryTypes.FAVORITES ? (<StarOutlineIcon size={18}/>) : (<FolderOutlineIcon size={18}/>)}
  112                      labels={text}

  140          if (isDmOrGm) {
  141:             return categories.filter((category) => category.type !== CategoryTypes.CHANNELS);
  142          }
  143  
  144:         return categories.filter((category) => category.type !== CategoryTypes.DIRECT_MESSAGES);
  145      }

  169          // If we have a mix of channel types, we need to filter out both the DM and Channel categories
  170:         const filteredCategories = categories.filter((category) => category.type !== CategoryTypes.CHANNELS && category.type !== CategoryTypes.DIRECT_MESSAGES);
  171          return createSubmenuItemsForCategoryArray(filteredCategories, currentCategory);

webapp/channels/src/components/channel_move_to_sub_menu_old/index.tsx:
   16  
   17: import {CategoryTypes} from 'mattermost-redux/constants/channel_categories';
   18  import {getCategoryInTeamWithChannel} from 'mattermost-redux/selectors/entities/channel_categories';

   78  
   79:             if (category.type === CategoryTypes.FAVORITES) {
   80                  text = formatMessage({id: 'sidebar_left.sidebar_channel_menu.favorites', defaultMessage: 'Favorites'});
   81              }
   82:             if (category.type === CategoryTypes.CHANNELS) {
   83                  text = formatMessage({id: 'sidebar_left.sidebar_channel_menu.channels', defaultMessage: 'Channels'});

   87                  id: `moveToCategory-${props.channel.id}-${category.id}`,
   88:                 icon: category.type === CategoryTypes.FAVORITES ? (<StarOutlineIcon size={16}/>) : (<FolderOutlineIcon size={16}/>),
   89                  direction: 'right',

  113          if (isDmOrGm) {
  114:             return categories.filter((category) => category.type !== CategoryTypes.CHANNELS);
  115          }
  116  
  117:         return categories.filter((category) => category.type !== CategoryTypes.DIRECT_MESSAGES);
  118      }

  142          // If we have a mix of channel types, we need to filter out both the DM and Channel categories
  143:         const filteredCategories = categories.filter((category) => category.type !== CategoryTypes.CHANNELS && category.type !== CategoryTypes.DIRECT_MESSAGES);
  144          return createSubmenuItemsForCategoryArray(filteredCategories);

webapp/channels/src/components/sidebar/sidebar_category/sidebar_category.tsx:
   13  
   14: import {CategoryTypes} from 'mattermost-redux/constants/channel_categories';
   15  import {localizeMessage} from 'mattermost-redux/utils/i18n_utils';

  158  
  159:         if (category.type === CategoryTypes.DIRECT_MESSAGES) {
  160              return draggingState.type === DraggingStateTypes.CHANNEL;
  161:         } else if (category.type === CategoryTypes.CHANNELS) {
  162              return draggingState.type === DraggingStateTypes.DM;

  247  
  248:         if (category.type === CategoryTypes.FAVORITES && !channelIds?.length) {
  249              return null;

  268              categoryMenu = <SidebarCategoryMenu category={category}/>;
  269:         } else if (category.type === CategoryTypes.DIRECT_MESSAGES) {
  270              const addHelpLabel = localizeMessage('sidebar.createDirectMessage', 'Create new direct message');

  310          let displayName = category.display_name;
  311:         if (category.type !== CategoryTypes.CUSTOM) {
  312              const message = categoryNames[category.type as keyof typeof categoryNames];

webapp/channels/src/components/sidebar/sidebar_category/sidebar_category_menu/index.tsx:
  21  import {readMultipleChannels} from 'mattermost-redux/actions/channels';
  22: import {CategoryTypes} from 'mattermost-redux/constants/channel_categories';
  23  import {shouldShowUnreadsCategory} from 'mattermost-redux/selectors/entities/preferences';

  55      let muteUnmuteCategoryMenuItem: JSX.Element | null = null;
  56:     if (category.type !== CategoryTypes.DIRECT_MESSAGES) {
  57          function toggleCategoryMute() {

  84      let renameCategoryMenuItem: JSX.Element | null = null;
  85:     if (category.type === CategoryTypes.CUSTOM) {
  86          function handleDeleteCategory() {

webapp/channels/src/packages/mattermost-redux/src/action_types/index.ts:
   7  import ChannelBookmarkTypes from './channel_bookmarks';
   8: import ChannelCategoryTypes from './channel_categories';
   9  import ChannelTypes from './channels';

  51      PluginTypes,
  52:     ChannelCategoryTypes,
  53      CloudTypes,

webapp/channels/src/packages/mattermost-redux/src/actions/channel_categories.ts:
    9  
   10: import {ChannelCategoryTypes, ChannelTypes} from 'mattermost-redux/action_types';
   11  import {logError} from 'mattermost-redux/actions/errors';

   13  import {Client4} from 'mattermost-redux/client';
   14: import {CategoryTypes} from 'mattermost-redux/constants/channel_categories';
   15  import {

   54          dispatch({
   55:             type: ChannelCategoryTypes.RECEIVED_CATEGORY,
   56              data: patchedCategory,

   62              dispatch({
   63:                 type: ChannelCategoryTypes.RECEIVED_CATEGORY,
   64                  data: category,

   93              {
   94:                 type: ChannelCategoryTypes.RECEIVED_CATEGORY,
   95                  data: updated,

  144              {
  145:                 type: ChannelCategoryTypes.RECEIVED_CATEGORIES,
  146                  data: data.categories,

  149              {
  150:                 type: ChannelCategoryTypes.RECEIVED_CATEGORY_ORDER,
  151                  data: {

  171          if (channel.type === General.DM_CHANNEL || channel.type === General.GM_CHANNEL) {
  172:             const allDmCategories = categories.filter((category) => category.type === CategoryTypes.DIRECT_MESSAGES);
  173  

  184              return dispatch({
  185:                 type: ChannelCategoryTypes.RECEIVED_CATEGORIES,
  186                  data: dmCategories.map((category) => ({

  196          }
  197:         const channelsCategory = getCategoryInTeamByType(state, channel.team_id, CategoryTypes.CHANNELS);
  198  

  210          return dispatch({
  211:             type: ChannelCategoryTypes.RECEIVED_CATEGORY,
  212              data: {

  239          if (setManualSorting &&
  240:             targetCategory.type !== CategoryTypes.DIRECT_MESSAGES &&
  241              targetCategory.sorting === CategorySorting.Default) {

  261          const result = dispatch({
  262:             type: ChannelCategoryTypes.RECEIVED_CATEGORIES,
  263              data: categories,

  277              dispatch({
  278:                 type: ChannelCategoryTypes.RECEIVED_CATEGORIES,
  279                  data: originalCategories,

  297          if (setManualSorting &&
  298:             targetCategory.type !== CategoryTypes.DIRECT_MESSAGES &&
  299              targetCategory.sorting === CategorySorting.Default) {

  340          const result = dispatch({
  341:             type: ChannelCategoryTypes.RECEIVED_CATEGORIES,
  342              data: categoriesArray,

  356              dispatch({
  357:                 type: ChannelCategoryTypes.RECEIVED_CATEGORIES,
  358                  data: originalCategories,

  376          const result = dispatch({
  377:             type: ChannelCategoryTypes.RECEIVED_CATEGORY_ORDER,
  378              data: {

  391              dispatch({
  392:                 type: ChannelCategoryTypes.RECEIVED_CATEGORY_ORDER,
  393                  data: {

  407      return {
  408:         type: ChannelCategoryTypes.RECEIVED_CATEGORY_ORDER,
  409          data: {

webapp/channels/src/packages/mattermost-redux/src/actions/channels.ts:
    22  import {Client4} from 'mattermost-redux/client';
    23: import {CategoryTypes} from 'mattermost-redux/constants/channel_categories';
    24  import {MarkUnread} from 'mattermost-redux/constants/channels';

   290          // move the channel from direct message category to the default "channels" category
   291:         const channelsCategory = getCategoryInTeamByType(getState(), teamID, CategoryTypes.CHANNELS);
   292          if (!channelsCategory) {

  1320          const channel = getChannelSelector(state, channelId);
  1321:         const category = getCategoryInTeamByType(state, channel?.team_id || getCurrentTeamId(state), CategoryTypes.FAVORITES);
  1322  

  1344              channel.team_id || getCurrentTeamId(state),
  1345:             channel.type === General.DM_CHANNEL || channel.type === General.GM_CHANNEL ? CategoryTypes.DIRECT_MESSAGES : CategoryTypes.CHANNELS,
  1346          );

webapp/channels/src/packages/mattermost-redux/src/constants/channel_categories.ts:
  5  
  6: export const CategoryTypes: {[name: string]: ChannelCategoryType} = {
  7      FAVORITES: 'favorites',

webapp/channels/src/packages/mattermost-redux/src/reducers/entities/channel_categories.ts:
   11  
   12: import {ChannelCategoryTypes, TeamTypes, UserTypes, ChannelTypes} from 'mattermost-redux/action_types';
   13  import {removeItem} from 'mattermost-redux/utils/array_utils';

   16      switch (action.type) {
   17:     case ChannelCategoryTypes.RECEIVED_CATEGORIES: {
   18          const categories: ChannelCategory[] = action.data;

   30      }
   31:     case ChannelCategoryTypes.RECEIVED_CATEGORY: {
   32          const category: ChannelCategory = action.data;

   42  
   43:     case ChannelCategoryTypes.CATEGORY_DELETED: {
   44          const categoryId: ChannelCategory['id'] = action.data;

  136      switch (action.type) {
  137:     case ChannelCategoryTypes.RECEIVED_CATEGORY_ORDER: {
  138          const teamId: string = action.data.teamId;

  146  
  147:     case ChannelCategoryTypes.CATEGORY_DELETED: {
  148          const categoryId: ChannelCategory['id'] = action.data;

webapp/channels/src/packages/mattermost-redux/src/selectors/entities/channel_categories.ts:
   13  import {General, Preferences} from 'mattermost-redux/constants';
   14: import {CategoryTypes} from 'mattermost-redux/constants/channel_categories';
   15  import {createSelector} from 'mattermost-redux/selectors/create_selector';

  108          (channels, categoryType, currentChannelId, profiles, currentUserId, myMembers, messageCounts, limitPref, myPreferences, collapsedThreads) => {
  109:             if (categoryType !== CategoryTypes.DIRECT_MESSAGES) {
  110                  // Only autoclose DMs that haven't been assigned to a category

webapp/channels/src/packages/mattermost-redux/src/selectors/entities/channels.ts:
    24  import {General, Permissions, Preferences} from 'mattermost-redux/constants';
    25: import {CategoryTypes} from 'mattermost-redux/constants/channel_categories';
    26  import {createSelector} from 'mattermost-redux/selectors/create_selector';

  1284  
  1285:     const category = getCategoryInTeamByType(state, channel.team_id || getCurrentTeamId(state), CategoryTypes.FAVORITES);
  1286  

webapp/channels/src/reducers/views/channel_sidebar.ts:
   8  
   9: import {ChannelCategoryTypes, UserTypes} from 'mattermost-redux/action_types';
  10  import {removeItem} from 'mattermost-redux/utils/array_utils';

  48          return [...state, action.data];
  49:     case ChannelCategoryTypes.RECEIVED_CATEGORY: {
  50          const category: ChannelCategory = action.data;

  57      }
  58:     case ChannelCategoryTypes.RECEIVED_CATEGORIES: {
  59          const categories = action.data;

webapp/channels/src/utils/test_helper.ts:
   22  
   23: import {CategoryTypes} from 'mattermost-redux/constants/channel_categories';
   24  import {getPreferenceKey} from 'mattermost-redux/utils/preference_utils';

  169              user_id: 'user_id',
  170:             type: CategoryTypes.CUSTOM,
  171              display_name: 'category_name',
